const express = require('express');
const multer = require('multer');
const path = require('path');
const fs = require('fs');

const app = express();
const upload = multer({ dest: 'uploads/' });

// Serve static files (like images, CSS, JS)
app.use(express.static('public'));

// Middleware to parse incoming requests
app.use(express.urlencoded({ extended: true }));
app.use(express.json());

// Serve the frontend HTML, CSS, and JS
app.get('/', (req, res) => {
    res.send(`
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Malicious File Decoder</title>
            <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }

                body {
                    font-family: Arial, sans-serif;
                    margin: 0;
                    overflow-x: hidden;
                    transition: background-color 0.3s ease, color 0.3s ease;
                    background-color: #ffffff;
                    color: #000000;
                }

                body.dark-theme {
                    background-color: #000000;
                    color: #052bb4;
                }

                .video-background {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    z-index: -1;
                    object-fit: cover;
                }

                header {
                    text-align: center;
                    padding: 20px;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    gap: 15px;
                }

                header h1 {
                    font-size: 2.5em;
                    color: #080808;
                }

                .container {
                    width: 90%;
                    max-width: 700px;
                    margin: 50px auto;
                    background-color: rgb(244, 246, 247);
                    padding: 30px;
                    border-radius: 15px;
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                }

                .language-selector {
                    display: flex;
                    justify-content: center;
                    margin-bottom: 20px;
                }

                .language-selector select {
                    padding: 10px;
                    border-radius: 4px;
                    border: 1px solid #ccc;
                    background-color: inherit;
                    color: inherit;
                    cursor: pointer;
                    transition: background-color 0.3s ease, color 0.3s ease;
                }

                .language-selector select:focus {
                    outline: none;
                    border-color: #007BFF;
                }

                main {
                    padding: 20px;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                }

                h1 {
                    font-size: 2em;
                    margin-bottom: 20px;
                }

                form {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    width: 100%;
                    max-width: 400px;
                    background-color: rgba(107, 168, 234, 0.6);
                    padding: 20px;
                    border-radius: 8px;
                }

                .theme-toggle {
                    position: fixed;
                    top: 10px;
                    right: 10px;
                    padding: 10px;
                    border: none;
                    cursor: pointer;
                    background-color: #007BFF;
                    color: white;
                    border-radius: 50%;
                }

                .theme-toggle:hover {
                    background-color: #0056b3;
                }

                input[type="file"] {
                    width: 100%;
                    padding: 10px;
                    margin: 10px 0;
                    border: 1px solid #ccc;
                    border-radius: 4px;
                }

                button {
                    padding: 10px 20px;
                    background-color: #28a745;
                    color: white;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    transition: background-color 0.3s ease;
                }

                button:hover {
                    background-color: #218838;
                }

                .result {
                    margin-top: 20px;
                    padding: 10px;
                    border: 1px solid #ccc;
                    border-radius: 4px;
                }

                .malicious {
                    background-color: #f8d7da;
                    color: #721c24;
                }

                .safe {
                    background-color: #d4edda;
                    color: #155724;
                }

                .details, .changes {
                    margin-top: 10px;
                    padding: 10px;
                    border: 1px solid #007bff;
                    background-color: #e7f1ff;
                    border-radius: 4px;
                }

                .comparison {
                    display: flex;
                    justify-content: space-between;
                    margin-top: 10px;
                }

                .comparison-box {
                    flex: 1;
                    margin: 0 10px;
                    padding: 10px;
                    border: 1px solid #007bff;
                    background-color: #e7f1ff;
                    border-radius: 4px;
                }

                .transformation {
                    margin-top: 20px;
                    padding: 10px;
                    border: 1px solid #ffc107;
                    background-color: #fff3cd;
                    border-radius: 4px;
                }

                .final-message {
                    margin-top: 10px;
                    font-weight: bold;
                    color: #155724;
                }
            </style>
        </head>
        <body>
            <video autoplay muted loop class="video-background">
                <source src="/bganimation.mp4" type="video/mp4">
                Your browser does not support the video tag.
            </video>

            <div class="container">
                <div class="language-selector">
                    <select id="language-selector" onchange="changeLanguage(event)">
                        <option value="en">English</option>
                        <option value="hi">Hindi</option>
                        <option value="ta">Tamil</option>
                        <option value="fr">French</option>
                        <option value="es">Spanish</option>
                    </select>
                </div>

                <button class="theme-toggle" onclick="toggleTheme()">ðŸŒ™</button>

                <h1>Malicious File Decoder</h1>
                <input type="file" id="fileInput" />
                <button id="uploadButton">Upload and Decode</button>
                <div id="loading" style="display:none;">Decoding in progress...</div>

                <div id="dashboard" style="display:none;">
                    <div class="result" id="maliciousLocation">Malicious Location: </div>
                    <div class="result" id="understandingFiles">Understanding Files: </div>
                    <div class="result" id="malwareRemoval">Malware Removed: </div>
                    <a id="downloadLink" style="display:none;" href="#">Download Modified File</a>
                </div>
            </div>

            <script>
                function toggleTheme() {
                    document.body.classList.toggle("dark-theme");
                    const themeIcon = document.querySelector('.theme-toggle');
                    themeIcon.textContent = document.body.classList.contains("dark-theme") ? "ðŸŒž" : "ðŸŒ™";
                }

                function changeLanguage(event) {
                    alert('Language changed to ' + event.target.value);
                }

                document.getElementById('uploadButton').onclick = function() {
                    const loading = document.getElementById('loading');
                    const dashboard = document.getElementById('dashboard');
                    loading.style.display = 'block';
                    dashboard.style.display = 'none';

                    const formData = new FormData();
                    const fileInput = document.getElementById('fileInput');
                    formData.append('file', fileInput.files[0]);

                    fetch('/upload', {
                        method: 'POST',
                        body: formData,
                    })
                    .then(response => response.json())
                    .then(data => {
                        loading.style.display = 'none';
                        dashboard.style.display = 'block';
                        document.getElementById('maliciousLocation').innerText = 'Malicious Location: Found in macros.';
                        document.getElementById('understandingFiles').innerText = 'Understanding Files: Analyze file structure and contents.';
                        document.getElementById('malwareRemoval').innerText = 'Malware Removed: Suspicious macros deleted.';
                        document.getElementById('downloadLink').href = data.downloadLink;
                        document.getElementById('downloadLink').style.display = 'inline';
                    })
                    .catch(error => {
                        loading.style.display = 'none';
                        alert('Error processing file');
                    });
                };
            </script>
        </body>
        </html>
    `);
});

// Handle file upload
app.post('/upload', upload.single('file'), (req, res) => {
    const file = req.file;
    const filePath = path.join(__dirname, 'uploads', file.filename);

    // Simulate file analysis and provide a modified file for download
    setTimeout(() => {
        const modifiedFile = `${file.filename}_modified`;
        const modifiedFilePath = path.join(__dirname, 'uploads', modifiedFile);

        // For the sake of the example, just rename the file to simulate modification
        fs.renameSync(filePath, modifiedFilePath);

        res.json({ downloadLink: `/uploads/${modifiedFile}` });
    }, 2000);
});

// Serve uploaded files
app.use('/uploads', express.static('uploads'));

// Start the server
app.listen(3000, () => {
    console.log('Server started on http://localhost:3000');
});
